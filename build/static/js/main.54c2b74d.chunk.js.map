{"version":3,"sources":["components/Field.js","views/Form.js","App.js","serviceWorker.js","index.js"],"names":["Field","input_field","field_name","type","formUpdate","options","className","useState","fieldValue","setFieldValue","handleChange","e","target","value","useEffect","undefined","FormControl","TextField","label","onChange","FormControlLabel","control","Checkbox","checked","key","FormLabel","id","RadioGroup","map","option_value","Radio","useStyles","makeStyles","theme","root","display","flexDirection","width","margin","formControl","spacing","checkboxGroup","flexWrap","justifyContent","alignSelf","numbersGroup","number","categoryGroup","category","submitButton","Form","classes","formRequest","setFormRequest","useCallback","setRequest","newRequest","console","log","requestUpdate","fields","FormGroup","Button","variant","color","onClick","alert","JSON","stringify","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.54c2b74d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  Radio,\r\n  TextField,\r\n  FormLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\n\r\nexport default function Field({\r\n  field_name,\r\n  type,\r\n  formUpdate,\r\n  options,\r\n  className,\r\n}) {\r\n  const [fieldValue, setFieldValue] = useState(null);\r\n  let handleChange = (e) => {\r\n    setFieldValue(e.target.value);\r\n  };\r\n\r\n  let handleCheckboxChange = (e) => {\r\n    setFieldValue(e.target.checked);\r\n  };\r\n\r\n  useEffect(() => {\r\n    formUpdate(field_name, fieldValue);\r\n  }, [field_name, fieldValue]);\r\n  let input_field;\r\n  if (options === undefined) {\r\n    if (type !== \"checkbox\") {\r\n      input_field = (\r\n        <FormControl>\r\n          <TextField type={type} label={field_name} onChange={handleChange} />\r\n        </FormControl>\r\n      );\r\n    } else {\r\n      input_field = (\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={fieldValue}\r\n              label={field_name}\r\n              onChange={handleCheckboxChange}\r\n            />\r\n          }\r\n          label={field_name}\r\n          //   labelPlacement=\"start\"\r\n        ></FormControlLabel>\r\n      );\r\n    }\r\n  } else {\r\n    input_field = (\r\n      <FormControl key={field_name}>\r\n        <FormLabel id=\"-label\">{field_name}</FormLabel>\r\n\r\n        <RadioGroup onChange={handleChange} value={fieldValue}>\r\n          {options.map((option_value) => {\r\n            return (\r\n              <FormControlLabel\r\n                value={option_value}\r\n                control={<Radio />}\r\n                label={option_value}\r\n                key={option_value}\r\n              />\r\n            );\r\n          })}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    );\r\n  }\r\n  return <div className={className}>{input_field}</div>;\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\n\r\nimport Field from \"../components/Field.js\";\r\nimport { Button, FormControl, FormGroup, makeStyles } from \"@material-ui/core\";\r\n\r\nfunction requestUpdate(field_name, value, formRequest, setRequest) {\r\n  if ((value !== undefined) & (value !== null) & (value !== \"\")) {\r\n    let newRequest = { ...formRequest };\r\n    newRequest[field_name] = value;\r\n    setRequest(newRequest);\r\n    console.log(newRequest);\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"80%\",\r\n    margin: \"0 0 128px 0\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n    display: \"flex\",\r\n  },\r\n  checkboxGroup: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    alignSelf: \"center\",\r\n    margin: \"32px 0 0 0\",\r\n  },\r\n  numbersGroup: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-evenly\",\r\n    alignSelf: \"center\",\r\n    margin: \"32px 0 0 0\",\r\n  },\r\n  number: {\r\n    margin: \"6px\",\r\n  },\r\n  categoryGroup: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"flex-start\",\r\n    alignSelf: \"center\",\r\n    margin: \"32px 0 0 0\",\r\n  },\r\n  category: {\r\n    margin: \"12px\",\r\n  },\r\n  submitButton: {\r\n    alignSelf: \"center\",\r\n    width: \"50%\",\r\n  },\r\n}));\r\n\r\nexport default function Form() {\r\n  const classes = useStyles();\r\n  const [formRequest, setFormRequest] = useState({});\r\n\r\n  let handleSubmit = () => {\r\n    alert(JSON.stringify(formRequest));\r\n  };\r\n\r\n  const formUpdate = useCallback(\r\n    (field_name, value) => {\r\n      requestUpdate(field_name, value, formRequest, setFormRequest);\r\n    },\r\n    [formRequest, setFormRequest]\r\n  );\r\n\r\n  let fields = [\r\n    <FormGroup key=\"demo-numbers\" className={classes.numbersGroup}>\r\n      <Field\r\n        key=\"Age\"\r\n        field_name=\"Age\"\r\n        type=\"number\"\r\n        formUpdate={formUpdate}\r\n        className={classes.number}\r\n      />\r\n      <Field\r\n        key=\"BMI\"\r\n        field_name=\"BMI\"\r\n        type=\"number\"\r\n        formUpdate={formUpdate}\r\n        className={classes.number}\r\n      />\r\n      <Field\r\n        key=\"Coronary Arteries Blocked\"\r\n        field_name=\"Coronary Arteries Blocked\"\r\n        type=\"number\"\r\n        formUpdate={formUpdate}\r\n        className={classes.number}\r\n      />\r\n    </FormGroup>,\r\n    <FormGroup key=\"numbers\" className={classes.numbersGroup}>\r\n      <Field\r\n        key=\"LVEF\"\r\n        field_name=\"LVEF\"\r\n        type=\"number\"\r\n        formUpdate={formUpdate}\r\n        className={classes.number}\r\n      />\r\n      <Field\r\n        key=\"Hematocrit\"\r\n        field_name=\"Hematocrit\"\r\n        type=\"number\"\r\n        formUpdate={formUpdate}\r\n        className={classes.number}\r\n      />\r\n      <Field\r\n        key=\"Creatinine\"\r\n        field_name=\"Creatinine\"\r\n        type=\"number\"\r\n        formUpdate={formUpdate}\r\n        className={classes.number}\r\n      />\r\n    </FormGroup>,\r\n    <FormGroup key=\"checkboxes\" className={classes.checkboxGroup}>\r\n      <Field\r\n        key=\"Hypertension\"\r\n        field_name=\"Hypertension\"\r\n        type=\"checkbox\"\r\n        formUpdate={formUpdate}\r\n      />\r\n      <Field\r\n        key=\"Diabetes\"\r\n        field_name=\"Diabetes\"\r\n        type=\"checkbox\"\r\n        formUpdate={formUpdate}\r\n      />\r\n      <Field\r\n        key=\"Peripheral Artery Disease\"\r\n        field_name=\"Peripheral Artery Disease\"\r\n        type=\"checkbox\"\r\n        formUpdate={formUpdate}\r\n      />\r\n      <Field\r\n        key=\"Stroke\"\r\n        field_name=\"Stroke\"\r\n        type=\"checkbox\"\r\n        formUpdate={formUpdate}\r\n      />\r\n      <Field\r\n        key=\"Heart Failure\"\r\n        field_name=\"Heart Failure\"\r\n        type=\"checkbox\"\r\n        formUpdate={formUpdate}\r\n      />\r\n      <Field\r\n        key=\"Arrhythmia\"\r\n        field_name=\"Arrhythmia\"\r\n        type=\"checkbox\"\r\n        formUpdate={formUpdate}\r\n      />\r\n    </FormGroup>,\r\n    <FormGroup key=\"urgent-checkboxes\" className={classes.checkboxGroup}>\r\n      <Field\r\n        key=\"Dialysis\"\r\n        field_name=\"Dialysis\"\r\n        type=\"checkbox\"\r\n        formUpdate={formUpdate}\r\n      />\r\n      <Field\r\n        key=\"Endocarditis\"\r\n        field_name=\"Endocarditis\"\r\n        type=\"checkbox\"\r\n        formUpdate={formUpdate}\r\n      />\r\n      <Field\r\n        key=\"Reanimation\"\r\n        field_name=\"Reanimation\"\r\n        type=\"checkbox\"\r\n        formUpdate={formUpdate}\r\n      />\r\n      <Field\r\n        key=\"Cardiogenic Shock\"\r\n        field_name=\"Cardiogenic Shock\"\r\n        type=\"checkbox\"\r\n        formUpdate={formUpdate}\r\n      />\r\n    </FormGroup>,\r\n    <FormGroup key=\"categories\" className={classes.categoryGroup}>\r\n      <Field\r\n        key=\"Sex\"\r\n        field_name=\"Sex\"\r\n        type=\"category\"\r\n        options={[\"Female\", \"Male\"]}\r\n        formUpdate={formUpdate}\r\n        className={classes.category}\r\n      />\r\n      <Field\r\n        key=\"COPD\"\r\n        field_name=\"COPD\"\r\n        type=\"category\"\r\n        options={[\"No\", \"Mild\", \"Moderate\", \"Severe\"]}\r\n        formUpdate={formUpdate}\r\n        className={classes.category}\r\n      />\r\n      <Field\r\n        key=\"Urgency upon admission\"\r\n        field_name=\"Urgency upon admission\"\r\n        type=\"category\"\r\n        options={[\"Elective\", \"Urgent\", \"Emergency\", \"Emergency - Rescue\"]}\r\n        formUpdate={formUpdate}\r\n        className={classes.category}\r\n      />\r\n      <Field\r\n        key=\"Weight of procedure\"\r\n        field_name=\"Weight of procedure\"\r\n        type=\"category\"\r\n        options={[\r\n          \"Isolated CABG\",\r\n          \"Isolated non-CABG\",\r\n          \"Two procedures\",\r\n          \"Three or more procedures\",\r\n        ]}\r\n        formUpdate={formUpdate}\r\n        className={classes.category}\r\n      />\r\n    </FormGroup>,\r\n    <FormGroup key=\"insufficiency-categories\" className={classes.categoryGroup}>\r\n      <Field\r\n        key=\"Aortic valve insufficiency\"\r\n        field_name=\"Aortic valve insufficiency\"\r\n        type=\"category\"\r\n        options={[\"No\", \"Trivial\", \"Mild\", \"Moderate\", \"Severe\"]}\r\n        formUpdate={formUpdate}\r\n        className={classes.category}\r\n      />\r\n      <Field\r\n        key=\"Mitral valve insufficiency\"\r\n        field_name=\"Mitral valve insufficiency\"\r\n        type=\"category\"\r\n        options={[\"No\", \"Trivial\", \"Mild\", \"Moderate\", \"Severe\"]}\r\n        formUpdate={formUpdate}\r\n        className={classes.category}\r\n      />\r\n      <Field\r\n        key=\"Tricuspid valve insufficiency\"\r\n        field_name=\"Tricuspid valve insufficiency\"\r\n        type=\"category\"\r\n        options={[\"No\", \"Trivial\", \"Mild\", \"Moderate\", \"Severe\"]}\r\n        formUpdate={formUpdate}\r\n        className={classes.category}\r\n      />\r\n    </FormGroup>,\r\n  ];\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1>Cardiac Surgery Mortality Risk Calculator</h1>\r\n      <FormControl className={classes.formControl}>{fields}</FormControl>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={handleSubmit}\r\n        className={classes.submitButton}\r\n      >\r\n        submit\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Form from \"./views/Form.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}