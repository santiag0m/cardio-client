{"version":3,"sources":["components/Field.js","views/Form.js","App.js","serviceWorker.js","index.js"],"names":["Field","input_field","field","formUpdate","className","useSpanish","useState","default","fieldValue","setFieldValue","legend","spanish_name","field_name","handleChange","e","target","value","useEffect","undefined","options","type","FormControl","style","width","TextField","label","onChange","display","flexDirection","justifyContent","alignItems","FormLabel","component","Grid","container","justify","spacing","item","Switch","checked","name","key","id","RadioGroup","flexWrap","marginRight","map","option_value","i","FormControlLabel","control","Radio","spanish_options","labelPlacement","useStyles","makeStyles","theme","root","maxWidth","padding","backgroundColor","borderRadius","marginTop","marginBottom","formControl","margin","formGroup","alignSelf","widht","submitButton","calculatorFields","group","clean","obj","cleanObj","propName","Form","initState","classes","formRequest","setFormRequest","setUseSpanish","calcTitle","useCallback","newRequest","console","log","updateRequest","buildFormGroup","spanishGroup","groupFields","filter","FormGroup","border","buildField","groups","Set","fields","IconButton","aria-label","onClick","Button","variant","color","fetch","method","mode","headers","body","JSON","stringify","then","response","json","data","risk_score","risk","parseFloat","toFixed","alert","message","disabled","currentRequest","cleanRequest","checkCleanRequest","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.be10a4b9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  RadioGroup,\r\n  Radio,\r\n  TextField,\r\n  FormLabel,\r\n  Switch,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nexport default function Field({ field, formUpdate, className, useSpanish }) {\r\n  const [fieldValue, setFieldValue] = useState(field.default);\r\n\r\n  let legend = useSpanish ? field.spanish_name : field.field_name;\r\n\r\n  let handleChange = (e) => {\r\n    setFieldValue(e.target.value);\r\n  };\r\n\r\n  let handleCheckboxChange = (e) => {\r\n    setFieldValue(e.target.checked);\r\n  };\r\n\r\n  useEffect(() => {\r\n    formUpdate(field.field_name, fieldValue);\r\n  }, [field, fieldValue]);\r\n\r\n  let input_field;\r\n\r\n  if (field.options === undefined) {\r\n    if (field.type !== \"checkbox\") {\r\n      input_field = (\r\n        <FormControl style={{ width: \"100%\" }}>\r\n          <TextField type={field.type} label={legend} onChange={handleChange} />\r\n        </FormControl>\r\n      );\r\n    } else {\r\n      input_field = (\r\n        <FormControl\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <FormLabel component=\"legend\">{legend}</FormLabel>\r\n          <Grid\r\n            component=\"label\"\r\n            container\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n            spacing={1}\r\n            style={{ width: \"150px\" }}\r\n          >\r\n            <Grid item>No</Grid>\r\n            <Grid item>\r\n              <Switch\r\n                checked={fieldValue}\r\n                onChange={handleCheckboxChange}\r\n                name=\"checkedC\"\r\n              />\r\n            </Grid>\r\n            <Grid item>{useSpanish ? \"Si\" : \"Yes\"}</Grid>\r\n          </Grid>\r\n        </FormControl>\r\n      );\r\n    }\r\n  } else {\r\n    input_field = (\r\n      <FormControl\r\n        key={field.field_name}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <FormLabel id=\"-label\">{legend}</FormLabel>\r\n\r\n        <RadioGroup\r\n          onChange={handleChange}\r\n          value={fieldValue}\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            flexWrap: \"wrap\",\r\n            width: \"52%\",\r\n            marginRight: \"2%\",\r\n          }}\r\n        >\r\n          {field.options.map((option_value, i) => {\r\n            return (\r\n              <FormControlLabel\r\n                value={option_value}\r\n                control={<Radio />}\r\n                label={useSpanish ? field.spanish_options[i] : option_value}\r\n                key={option_value}\r\n                labelPlacement=\"start\"\r\n              />\r\n            );\r\n          })}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    );\r\n  }\r\n  return <div className={className}>{input_field}</div>;\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\n\r\nimport Field from \"../components/Field.js\";\r\nimport {\r\n  FormLabel,\r\n  IconButton,\r\n  Button,\r\n  FormControl,\r\n  FormGroup,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport LanguageIcon from \"@material-ui/icons/Language\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"60%\",\r\n    maxWidth: \"1000px\",\r\n    alignItems: \"center\",\r\n    // margin: \"0 0 128px 0\",\r\n    padding: \"5%\",\r\n    backgroundColor: \"white\",\r\n    borderRadius: \"25px\",\r\n    marginTop: \"3%\",\r\n    marginBottom: \"5%\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(3),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    width: \"100%\",\r\n    // justifyContent: \"center\",\r\n  },\r\n  formGroup: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    // flexWrap: \"wrap\",\r\n    justifyContent: \"space-evenly\",\r\n    alignSelf: \"center\",\r\n    margin: \"32px 0 0 0\",\r\n    borderRadius: \"3px\",\r\n    width: \"80%\",\r\n  },\r\n  field: {\r\n    margin: \"6px\",\r\n    padding: \"6px\",\r\n    backgroundColor: \"rgba(230, 232, 235, 0.2)\",\r\n    borderRadius: \"5px\",\r\n    widht: \"80%\",\r\n  },\r\n  submitButton: {\r\n    alignSelf: \"center\",\r\n    width: \"50%\",\r\n  },\r\n}));\r\n\r\nfunction updateRequest(field_name, value, formRequest, setFormRequest) {\r\n  let newRequest = { ...formRequest };\r\n  newRequest[field_name] = value;\r\n  setFormRequest(newRequest);\r\n  console.log(newRequest);\r\n}\r\n\r\nconst calculatorFields = [\r\n  {\r\n    field_name: \"Age\",\r\n    spanish_name: \"Edad\",\r\n    type: \"number\",\r\n    default: null,\r\n    group: \"Demographics\",\r\n  },\r\n  {\r\n    field_name: \"BMI\",\r\n    spanish_name: \"IMC\",\r\n    type: \"number\",\r\n    default: null,\r\n    group: \"Demographics\",\r\n  },\r\n  {\r\n    field_name: \"Sex\",\r\n    spanish_name: \"Sexo\",\r\n    type: \"category\",\r\n    options: [\"Female\", \"Male\"],\r\n    spanish_options: [\"Femenino\", \"Masculino\"],\r\n    default: \"\",\r\n    group: \"Demographics\",\r\n  },\r\n  {\r\n    field_name: \"LVEF\",\r\n    spanish_name: \"Fracción de Eyección\",\r\n    type: \"number\",\r\n    default: null,\r\n    group: \"Laboratory\",\r\n  },\r\n  {\r\n    field_name: \"Hematocrit\",\r\n    spanish_name: \"Hematocrito\",\r\n    type: \"number\",\r\n    default: null,\r\n    group: \"Laboratory\",\r\n  },\r\n  {\r\n    field_name: \"Creatinine\",\r\n    spanish_name: \"Creatinina\",\r\n    type: \"number\",\r\n    default: null,\r\n    group: \"Laboratory\",\r\n  },\r\n  {\r\n    field_name: \"Coronary Arteries Blocked\",\r\n    spanish_name: \"Vasos Coronarios Enfermos\",\r\n    type: \"number\",\r\n    default: null,\r\n    group: \"Comorbidities\",\r\n  },\r\n  {\r\n    field_name: \"Hypertension\",\r\n    spanish_name: \"Hipertensión\",\r\n    type: \"checkbox\",\r\n    default: false,\r\n    group: \"Comorbidities\",\r\n  },\r\n  {\r\n    field_name: \"Diabetes\",\r\n    spanish_name: \"Diabetes\",\r\n    type: \"checkbox\",\r\n    default: false,\r\n    group: \"Comorbidities\",\r\n  },\r\n  {\r\n    field_name: \"Peripheral Artery Disease\",\r\n    spanish_name: \"Enfermedad Arterial Periférica\",\r\n    type: \"checkbox\",\r\n    default: false,\r\n    group: \"Comorbidities\",\r\n  },\r\n  {\r\n    field_name: \"Stroke\",\r\n    spanish_name: \"Enfermedad Cerebro Vascular\",\r\n    type: \"checkbox\",\r\n    default: false,\r\n    group: \"Comorbidities\",\r\n  },\r\n  {\r\n    field_name: \"Heart failure\",\r\n    spanish_name: \"Insuficiencia Cardíaca\",\r\n    type: \"checkbox\",\r\n    default: false,\r\n    group: \"Comorbidities\",\r\n  },\r\n  {\r\n    field_name: \"Arrhythmia\",\r\n    spanish_name: \"Arritmia\",\r\n    type: \"checkbox\",\r\n    default: false,\r\n    group: \"Comorbidities\",\r\n  },\r\n  {\r\n    field_name: \"Dialysis\",\r\n    spanish_name: \"Diálisis\",\r\n    type: \"checkbox\",\r\n    default: false,\r\n    group: \"Comorbidities\",\r\n  },\r\n  {\r\n    field_name: \"Endocarditis\",\r\n    spanish_name: \"Endocarditis Infecciosa\",\r\n    type: \"checkbox\",\r\n    default: false,\r\n    group: \"Comorbidities\",\r\n  },\r\n  {\r\n    field_name: \"COPD\",\r\n    spanish_name: \"Enfermedad Pulmonar Crónica\",\r\n    type: \"category\",\r\n    options: [\"No\", \"Mild\", \"Moderate\", \"Severe\"],\r\n    spanish_options: [\"No\", \"Leve\", \"Moderada\", \"Severa\"],\r\n    default: \"\",\r\n    group: \"Comorbidities\",\r\n  },\r\n  {\r\n    field_name: \"Aortic valve insufficiency\",\r\n    spanish_name: \"Insuficiencia Aórtica\",\r\n    type: \"category\",\r\n    options: [\"No\", \"Trivial\", \"Mild\", \"Moderate\", \"Severe\"],\r\n    spanish_options: [\"No\", \"Trivial\", \"Leve\", \"Moderada\", \"Severa\"],\r\n    default: \"\",\r\n    group: \"Comorbidities\",\r\n  },\r\n  {\r\n    field_name: \"Mitral valve regurgitation\",\r\n    spanish_name: \"Insuficiencia Mitral\",\r\n    type: \"category\",\r\n    options: [\"No\", \"Trivial\", \"Mild\", \"Moderate\", \"Severe\"],\r\n    spanish_options: [\"No\", \"Trivial\", \"Leve\", \"Moderada\", \"Severa\"],\r\n    default: \"\",\r\n    group: \"Comorbidities\",\r\n  },\r\n  {\r\n    field_name: \"Tricuspid valve regurgitation\",\r\n    spanish_name: \"Insuficiencia Tricuspídea\",\r\n    type: \"category\",\r\n    options: [\"No\", \"Trivial\", \"Mild\", \"Moderate\", \"Severe\"],\r\n    spanish_options: [\"No\", \"Trivial\", \"Leve\", \"Moderada\", \"Severa\"],\r\n    default: \"\",\r\n    group: \"Comorbidities\",\r\n  },\r\n  {\r\n    field_name: \"Reanimation\",\r\n    spanish_name: \"Resucitación\",\r\n    type: \"checkbox\",\r\n    default: false,\r\n    group: \"Procedure\",\r\n  },\r\n  {\r\n    field_name: \"Cardiogenic Shock\",\r\n    spanish_name: \"Schock Cardiogénico\",\r\n    type: \"checkbox\",\r\n    default: false,\r\n    group: \"Procedure\",\r\n  },\r\n  {\r\n    field_name: \"Urgency upon admission\",\r\n    spanish_name: \"Urgencia en admisión\",\r\n    type: \"category\",\r\n    options: [\"Elective\", \"Urgent\", \"Emergency\", \"Emergency - Rescue\"],\r\n    spanish_options: [\r\n      \"Electiva\",\r\n      \"Urgente\",\r\n      \"Emergencia\",\r\n      \"Emergencia - Rescate\",\r\n    ],\r\n    default: \"\",\r\n    group: \"Procedure\",\r\n  },\r\n  {\r\n    field_name: \"Weight of procedure\",\r\n    spanish_name: \"Peso del procedimiento\",\r\n    type: \"category\",\r\n    options: [\r\n      \"Isolated CABG\",\r\n      \"Isolated non-CABG\",\r\n      \"Two procedures\",\r\n      \"Three or more procedures\",\r\n    ],\r\n    spanish_options: [\r\n      \"Aislado (Baipás Coronario)\",\r\n      \"Aislado (No Baipás Coronario)\",\r\n      \"Dos procedimientos\",\r\n      \"Tres o más procedimientos\",\r\n    ],\r\n    default: \"\",\r\n    group: \"Procedure\",\r\n  },\r\n];\r\n\r\nfunction clean(obj) {\r\n  // Modified from: https://stackoverflow.com/a/286162/8157508\r\n  let cleanObj = { ...obj };\r\n  for (var propName in cleanObj) {\r\n    if (\r\n      cleanObj[propName] === null ||\r\n      cleanObj[propName] === undefined ||\r\n      cleanObj[propName] === \"\"\r\n    ) {\r\n      delete cleanObj[propName];\r\n    }\r\n  }\r\n  return cleanObj;\r\n}\r\n\r\nexport default function Form() {\r\n  // Initialize all fields with defaults\r\n  const initState = {};\r\n  for (const field of calculatorFields) {\r\n    initState[field.field_name] = field.default;\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [formRequest, setFormRequest] = useState(initState);\r\n  const [useSpanish, setUseSpanish] = useState(true);\r\n\r\n  let calcTitle = useSpanish\r\n    ? \"Calculadora de Riesgo de Mortalidad\\nen Cirugía Cardiovascular\"\r\n    : \"Cardiac Surgery Mortality Risk Calculator\";\r\n\r\n  const switchLanguage = () => {\r\n    setUseSpanish(!useSpanish);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    fetch(\"https://ayef8zx40j.execute-api.us-east-1.amazonaws.com/dev/\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(clean(formRequest)),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.risk_score !== undefined) {\r\n          const risk = (parseFloat(data.risk_score) * 100).toFixed(2);\r\n          alert(\r\n            useSpanish\r\n              ? \"El puntaje de riesgo es: \" + risk + \"%\"\r\n              : \"The risk score is: \" + risk + \"%\"\r\n          );\r\n        } else {\r\n          alert(data.message);\r\n        }\r\n      });\r\n\r\n    console.log(JSON.stringify(formRequest));\r\n  };\r\n\r\n  const formUpdate = useCallback(\r\n    (field_name, value) => {\r\n      updateRequest(field_name, value, formRequest, setFormRequest);\r\n    },\r\n    [formRequest, setFormRequest]\r\n  );\r\n\r\n  function buildField(field) {\r\n    return (\r\n      <Field\r\n        key={field.field_name}\r\n        field={field}\r\n        formUpdate={formUpdate}\r\n        className={classes.field}\r\n        useSpanish={useSpanish}\r\n      />\r\n    );\r\n  }\r\n\r\n  function buildFormGroup(group) {\r\n    let groupFields = calculatorFields.filter((field) => field.group === group);\r\n    let spanishGroup;\r\n    switch (group) {\r\n      case \"Comorbidities\":\r\n        spanishGroup = \"Comorbilidades\";\r\n        break;\r\n      case \"Procedure\":\r\n        spanishGroup = \"Procedimiento\";\r\n        break;\r\n      case \"Demographics\":\r\n        spanishGroup = \"Demográficos\";\r\n        break;\r\n      case \"Laboratory\":\r\n        spanishGroup = \"Laboratorio\";\r\n        break;\r\n      default:\r\n        spanishGroup = \"\";\r\n    }\r\n\r\n    return (\r\n      <FormGroup key={group} className={classes.formGroup}>\r\n        <fieldset\r\n          style={{\r\n            border: \"1px solid gray\",\r\n            borderRadius: \"3px\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <legend>{useSpanish ? spanishGroup : group}</legend>\r\n          {groupFields.map((field) => buildField(field))}\r\n        </fieldset>\r\n      </FormGroup>\r\n    );\r\n  }\r\n\r\n  // Separate fields into groups\r\n  let groups = new Set(calculatorFields.map((field) => field.group));\r\n  groups = [...groups];\r\n\r\n  let fields = groups.map((group) => buildFormGroup(group));\r\n\r\n  const checkCleanRequest = () => {\r\n    let currentRequest = JSON.stringify(formRequest);\r\n    let cleanRequest = JSON.stringify(clean(formRequest));\r\n    console.log(currentRequest, cleanRequest);\r\n    console.log(currentRequest === cleanRequest);\r\n    return currentRequest === cleanRequest;\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"flex-end\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <FormLabel component=\"legend\">\r\n          {useSpanish ? \"English\" : \"Español\"}\r\n        </FormLabel>\r\n        <IconButton aria-label=\"language\" onClick={switchLanguage}>\r\n          <LanguageIcon />\r\n        </IconButton>\r\n      </div>\r\n      <h1 width=\"100%\">{calcTitle}</h1>\r\n      <FormControl className={classes.formControl}>{fields}</FormControl>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={handleSubmit}\r\n        className={classes.submitButton}\r\n        disabled={!checkCleanRequest()}\r\n      >\r\n        submit\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Form from \"./views/Form.js\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Form />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}